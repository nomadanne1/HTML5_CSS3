1. 웹 퍼블리싱이란?

 - 웹 퍼블리셔의 역할 : HTML(구조) / CSS

2. 웹과 인터넷의 차이? 관계?
 
 - 인터넷은 웹이다? 인터넷 == 웹 x
 - 인터넷은 인터 네트워크 기술 중에 하나이다.
    : 클라이언트(요청) << 표준규약 (FTP, SMTP, TELNET, WWWW...) >> 서버(제공)  

3. WWWW(웹)의 탄생 배경 

 - Berners-Lee (Hypertext project 제안)
 - Mark Andereessen (Mosaic: later Netscape)

4. 웹문서와 웹서버의 이해

 - 웹서버 > 웹문서(홈디렉토리/wiki/: 특정디렉토리)
 - Wep과 HTTP 
   1. http://en.wikipedia.org/wiki/CERN 
   2. REQUEST- GET요청 
   3. >> 웹서버는 홈디렉토리에서 CERN 찾음
   4. RESPONSE

5. 웹 문서 만들어 보기

6. Markup 언어

 - 문서 편집과 콘텐츠 구분자의 필요성: HyperText, Markup
 - 태그의 기호 (< >)가 마크업 기호로 적합한 이유
 - Markup 언어란 문서의 콘텐츠를 구분하기 위한 태그 집합
 
7. HyperText

 - HTML(Hyper Text Markup Language) cf.hyper: 저 건너~
 - HTML은 문서의 구조를 만들기 위한 태그 + HyperText를 위한 태그를 포함

8. HTML파일의 기본구조: 규칙

 <html>
   <head>: 브라우저 화면에 보여줘야할 내용에 대한 설정
      <title> 문저 제목 </title>
   </head>
   <body>: 브라우저 화면에 보여줄 내용
      <a href="">HTML</a>이란
      HyperText Markup Language
   </body>
 </html>

 9. DOCTYPE과 W3C

  - 사용하지 않을 태그에 대한 호환성을 지정하기 위한 Document Type
  - 랜더링 방식의 호환성 문제 발생
  - 다양한 브라우저의 경쟁 구도로 인한 독자적인 태그들
   => 해결 방안: 웹 표준기구 W3C 탄생
     *W3C의 역할
      1. Draft
      2. Working Draft
      3. Candidate Recommendation
      4. Recommendation

  > 사용하지 않을 태그에 대한 호환성을 지정하기 위한 Document Type 
    - HTML DTD: Document Type Definition의 종류
    - strict.dtd, loose.dtd, frameset.dtd... 
    - 기준 없으면 브라우저 자기 자신만의 방식=> Quirks!!
  
  > 문서 구조의 형식 <!DOCTYPE html> ( 표준방식으로 html 출력해주세용~ )

10. 실습환경 준비하기
 
 - Visual Studio Code
 - Live Server

11. PC 웹과 모바일 웹

 - 어떤 웹을 준비할 것인가? >> 모바일용 웹과 PC용 웹의 양분화
 - 모바일과 PC 사이의 다양한 장치들 >> 다양한 장치를 위한 UI 구현의 문제
 - Mobile First와 반응형 웹
 - PC웹의 필요성

12. 실습을 위한 파일 구조 생성하기

 - 파일 구조 (문서들의 연결 관계 고려)